{"ast":null,"code":"var _jsxFileName = \"/Users/corneliaboeger/Documents/WWI18DSB/3. Semester/Web Programmierung/Klausurprojekt_Webprogrammierung/src/Rezeptuebersicht/Uebersicht.jsx\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, FormControlLabel, Checkbox, Button } from '@material-ui/core';\nimport Einkaufen from '../src/ZutatenEingabe/Einkaufen';\n\nconst Uebersicht = props => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.cocktails.map(value => {\n    return React.createElement(ListItem, {\n      key: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }),\n      label: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Ausw\\xE4hlen\"));\n};\n\nexport default Uebersicht;\n/*\nWas noch fehlt: Hier dürfen nur die Rezepte ausgegeben werden. Die zu den vorher ausgewählten Zutaten passen.\nWenn eingekauft werden würde müssen Matchingraten angezeigt werden. Wenn nicht die matchenden Rezept\noder ein Fehler.\n*/\n\n/*class Rezepte extends Einkaufen {\n    if (Button = checked) {\n        function matches (){\n\n        }\n    }\n   else {\n       if (checkitem = ) {\n           return (\n               <p> Old oldFashioned </p>\n           )\n       }\n\n}\n}\nfunction matches () {\n    If (checkitem = )\n}\n*/","map":{"version":3,"sources":["/Users/corneliaboeger/Documents/WWI18DSB/3. Semester/Web Programmierung/Klausurprojekt_Webprogrammierung/src/Rezeptuebersicht/Uebersicht.jsx"],"names":["React","List","ListItem","ListItemText","FormControlLabel","Checkbox","Button","Einkaufen","Uebersicht","props","cocktails","map","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,YAAxB,EAAsCC,gBAAtC,EAAwDC,QAAxD,EAAkEC,MAAlE,QAA+E,mBAA/E;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,KAAK,IAAI;AAC1B,WAAQ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,gBAAD;AACA,MAAA,OAAO,EACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAGA,MAAA,KAAK,EAAEA,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAAR;AAOH,GARA,CADL,CADA,EAYA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZA,CADJ;AAkBH,CAnBD;;AAoBA,eAAeJ,UAAf;AAEA;;;;;;AAOA","sourcesContent":["import React from 'react';\nimport {List, ListItem, ListItemText, FormControlLabel, Checkbox, Button} from '@material-ui/core';\nimport Einkaufen from '../src/ZutatenEingabe/Einkaufen';\n\n\nconst Uebersicht = (props) => {\n    return(\n        <React.Fragment>\n        <List>\n            {props.cocktails.map(value => {\n                return( <ListItem key={value}>\n                    <FormControlLabel\n                    control={\n                    <Checkbox />}\n                    label={value}\n      />\n                </ListItem>)\n            })}\n        </List>\n        <Button variant=\"contained\" color=\"secondary\">\n        Auswählen\n      </Button>\n        </React.Fragment>\n        )\n}\nexport default Uebersicht;\n\n/*\nWas noch fehlt: Hier dürfen nur die Rezepte ausgegeben werden. Die zu den vorher ausgewählten Zutaten passen.\nWenn eingekauft werden würde müssen Matchingraten angezeigt werden. Wenn nicht die matchenden Rezept\noder ein Fehler.\n*/\n\n\n/*class Rezepte extends Einkaufen {\n    if (Button = checked) {\n        function matches (){\n\n        }\n    }\n   else {\n       if (checkitem = ) {\n           return (\n               <p> Old oldFashioned </p>\n           )\n       }\n\n}\n}\nfunction matches () {\n    If (checkitem = )\n}\n*/"]},"metadata":{},"sourceType":"module"}